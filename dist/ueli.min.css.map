{"version":3,"file":"ueli.min.css","mappings":"AAAA,oHCUA,KAEE,8BADA,gBACA,CAUF,KACE,SAOF,KACE,cAQF,GACE,cACA,eAWF,GACE,uBACA,SACA,iBAQF,IACE,gCACA,cAUF,EACE,6BAQF,YACE,mBACA,0BACA,0EAOF,SAEE,mBAQF,cAGE,gCACA,cAOF,MACE,cAQF,QAEE,cACA,cACA,kBACA,wBAGF,IACE,cAGF,IACE,UAUF,IACE,kBAWF,sCAKE,oBACA,eACA,iBACA,SAQF,aAGE,iBAQF,cAGE,oBAOF,gDAIE,0BAOF,wHAIE,kBACA,UAOF,4GAIE,8BAOF,SACE,2BAUF,OACE,sBACA,cACA,cACA,eACA,UACA,mBAOF,SACE,wBAOF,SACE,cAQF,6BAEE,sBACA,UAOF,kFAEE,YAQF,cACE,6BACA,oBAOF,yCACE,wBAQF,6BACE,yBACA,CAUF,QACE,cAOF,QACE,kBAkBF,kBACE,aC7VF,iBAGE,mBAGF,KACE,sBAGF,kCAME,sBAGF,iBAIE,YADA,cACA,CAGF,MACE,eAGF,qBAGE,cACA,eAGF,OACE,SAGF,QACE,mBAGF,IACE,cAGF,GACE,SACA,qBACA,cAGF,2BACE,aCxDF,sCAKE,aACA,uBACA,qBAGF,SACE,mBAGF,SAIE,SAFA,SADA,YAEA,SACA,CAGF,SACE,gBAIA,wBACE,uBACA,mBAIF,gBACE,UAIJ,mBACE,UADF,uBACE,UADF,cACE,UCtCF,KAOE,qBCLiB,CDMjB,WEQE,+CCXO,CC2DL,eFhDF,eCXO,CDWP,qBCXO,CDWP,eDXe,CILnB,uEDgEM,qBCjDJ,aAEA,sNACE,gBClBJ,0CAKE,cJWE,mBCXO,CDWP,eCXO,CDWP,qBCXO,CDWP,eCXO,CGDT,oBLeiB,CKhBjB,gBLiBe,CKbf,0LACE,aAGF,8KACE,gBCJA,OHwDE,eGxDF,OHwDE,kBGxDF,OHwDE,oBGxDF,OHwDE,sBGxDF,OHwDE,wBGxDF,OHwDE,0BIhEN,EACE,cAUA,yBACE,aP6Be,COzBnB,eACE,oBP2BgB,CO1BhB,4BP4BgB,CO1BhB,qBACE,yBPwBoB,CQ7CxB,MCGE,gBADA,cACA,CCHF,MACE,qBACA,mBViGc,CWnGhB,oFACE,uBACE,6DAIA,+PAgCJ,CAjCI,uCADA,4BADA,iBAmCJ,EAEE,6CAGF,WACE,sBACA,aAIF,mBACE,iBAGF,eACE,kBADF,aACE,mCX/CuB,uBYLvB,8CACE,gCAIF,uCACE,wBACA,UACA,yBAGF,gEAEE,gBCTA,CbCqB,iBaDrB,2JAMJ,uKAII,cACE,8BChBJ,YAKA,wBAIA,aCRF,kDAII,cACA,6CACA,cAKA,+BAGF,yBACE,mBAGF,cACE,iBAGF,0BAHE,oBAGF,2BAME,sCAGF,eAEE,2BACA,mBAIA,4BAKA,iDAUF,UAEE,mCZOE,6Da5CJ,iCAEA,+Bb0CI,kCc1DJ,sBACA,aCeM,gBAXN,kBCXF,CAgBE,mBACA,ChB+CI,4Ce1CE,CCtBR,UAiBE,MCEE,YACA,gBDHF,4CCGE,MDDF,4FAIE,eAEA,CANF,iBAME,0BEtBF,iJAMI,WACA,CAFA,OADF,uBACE,WAEA,sDAIJ,0IAGE,4BAMF,yKAOE,iBACA,yDASA,iQrBtCe,CqBqCjB,uBACE,CAHF,2BAEA,CACE,wBAHF,WAFF,aAEE,CAFF,UAEE,SC3BA,mCACA,iFtByDuB,UsBnDrB,CALF,uCAGE,+BACA,cACA,CAGF,cCdA,iCAJA,iDACE,CDoBA,qBCrBF,sCACE,UAGF,mBACE,CDaF,aACE,eACA,qBACA,CChBA,sDAKF,CDSE,UCTF,gJAGE,CAHF,kBAGE,UACA,mBAEA,iFAKF,oEAGE,evBwCe,CuBzCf,kBACA,CAFA,iBAKF,+IAKE,gCAGF,oBAJE,WACA,kBADA,iBACA,oBAGF,yEAKA,sBAHE,qBAGF,uFAEE,uBAGF,CAHE,4BAGF,+EAEE,2FAGF,wBACE,kBACA,qFAGF,iEAMA,yFAKE,oIASF,wBACE,qHCzEF,sBAOA,kCAEA,iBACA,uSAuCA,2GAEA,kTvBxCE,cAPM,4BAFJ,uBAEI,4GAFJ,qBAEI,iBwBRR,uCAIA,uCAIA,SAMA,4BACE,qBAIA,CAXF,oBACE,CAMA,mBADF,iBACE,qBAIA,CAOF,yBACE,CARA,iGALF,CAMI,wBANJ,sBACE,qBC0OA,iBD/NF,CAjBE,qBAMA,CAIA,kBAQA,mCAIA,kBC0NA,iDD/NF,SACE,qBAGF,iCACE,WC0NA,kDD/NF,eACE,wBAGF,CACE,4CC0NA,CD1NA,UC0NA,mCD9NA,uBAGF,2BACE,SC0NA,sBD/NF,cACE,oCAIA,EAMA,yGACE,sBAGF,6BACE,WE3CN,sBCEE,CACA,YACA,uBACA,CACA,oDAgBA,8CAVA,uBAEA,kDAGA,WCjBF,sB1BgEM,a0B7DJ,uBACE,gDAIF,8CAEE,uBAGF,yBACE","sources":["webpack://@zeix/ueli/./scss/ueli.scss","webpack://@zeix/ueli/./scss/02-generic/_normalize.scss","webpack://@zeix/ueli/./scss/02-generic/_global.scss","webpack://@zeix/ueli/./scss/02-generic/_form.scss","webpack://@zeix/ueli/./scss/03-elements/_body.scss","webpack://@zeix/ueli/./scss/00-settings/_variables.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_output-props.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_use-variation.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_fluid-calc.scss","webpack://@zeix/ueli/./scss/03-elements/_spacing.scss","webpack://@zeix/ueli/./scss/03-elements/_headings.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_typography.scss","webpack://@zeix/ueli/./scss/03-elements/_link.scss","webpack://@zeix/ueli/./scss/03-elements/_list.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_list-unstyled.scss","webpack://@zeix/ueli/./scss/03-elements/_label.scss","webpack://@zeix/ueli/./scss/03-elements/_input.scss","webpack://@zeix/ueli/./scss/03-elements/_selection.scss","webpack://@zeix/ueli/./scss/03-elements/_button.scss","webpack://@zeix/ueli/./scss/03-elements/_table.scss","webpack://@zeix/ueli/./scss/03-elements/_print.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_container.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_flex-row.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_flex-column.scss","webpack://@zeix/ueli/./scss/04-objects/_embed.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_aspect-ratio.scss","webpack://@zeix/ueli/./scss/05-components/_list.scss","webpack://@zeix/ueli/./scss/05-components/_input.scss","webpack://@zeix/ueli/./scss/05-components/_selection.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_button.scss","webpack://@zeix/ueli/./scss/06-utilities/_display.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_mq.scss","webpack://@zeix/ueli/./scss/06-utilities/_screenreader.scss","webpack://@zeix/ueli/./scss/01-tools/mixins/_accessibility.scss","webpack://@zeix/ueli/./scss/06-utilities/_formatted-text.scss"],"sourcesContent":["/*! ueli v1.0.0-alpha.0 | MIT License */\n\n// Tools & Settings\n@import '01-tools/functions';\n@import '00-settings/tokens';\n@import '00-settings/variables';\n@import '01-tools/mixins';\n\n// Generic\n@import '02-generic';\n\n// Elements\n@import '03-elements';\n\n// Objects\n@import '04-objects';\n\n// Components\n@import '05-components';\n\n// Utilities\n@import '06-utilities';\n","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n","*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\ncanvas,\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\naudio {\n  max-width: 100%;\n}\n\nblockquote,\ndd,\nfigure {\n  margin-left: 0;\n  margin-right: 0;\n}\n\niframe {\n  border: 0;\n}\n\naddress {\n  font-style: inherit;\n}\n\npre {\n  overflow: auto;\n}\n\nhr {\n  border: 0;\n  border-top: 1px solid;\n  color: inherit;\n}\n\n:focus:not(:focus-visible) {\n  outline: none;\n}\n","button,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  letter-spacing: inherit;\n  word-spacing: inherit;\n}\n\noptgroup {\n  font-weight: bolder;\n}\n\nfieldset {\n  min-width: 0;\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nselect {\n  &:focus::-ms-value {\n    background: transparent;\n    color: currentColor;\n  }\n\n  // Undo opacity in Chrome\n  &:disabled {\n    opacity: 1;\n  }\n}\n\n::placeholder {\n  opacity: 1;\n}\n","body {\n  @include type;\n\n  @if $font-antialiased {\n    @include font-smoothing;\n  }\n\n  background-color: $global-bg;\n  color: $text-color;\n}\n","// Functional Colors\n$color-accent: get-color(blue) !default;\n$color-background: get-color(white) !default;\n$color-background-inverted: get-color(gray-800) !default;\n$color-background-muted: get-color(gray-100) !default;\n$color-foreground: get-color(gray-800) !default;\n$color-foreground-inverted: get-color(white) !default;\n$color-foreground-muted: get-color(gray-500) !default;\n$color-line: get-color(gray-200) !default;\n$color-icon: get-color(gray-800) !default;\n\n// Global\n$font-antialiased: false !default;\n$fluid-scaling: true !default;\n$global-bg: $color-background !default;\n$text-color: $color-foreground !default;\n\n// Headings\n$headings: ('h6, .h6', 'h5, .h5', 'h4, .h4', 'h3, .h3', 'h2, .h2', 'h1, .h1') !default;\n$headings-spacing: to-em(6px) !default;\n$headings-color: inherit !default;\n\n$type-scale: 1.25 !default;\n$type-scale-base: (\n  min: $font-size-base,\n) !default;\n\n// Grid\n$grid-columns: 12 !default;\n$grid-gutter: (\n  min: 30px,\n) !default;\n$grid-container: map-get($mq-breakpoints, xl) !default;\n$grid-container-gutter: $grid-gutter !default;\n$grid-pull-classes: false !default;\n$grid-push-classes: false !default;\n$grid-offset-classes: false !default;\n$grid-column-classes: false !default;\n\n// Link\n$link-color: $color-accent !default;\n$link-hover-color: shade-color($link-color, 20%) !default;\n$link-active-color: $link-hover-color !default;\n$link-focus-color: $link-hover-color !default;\n$link-decoration: none !default;\n$link-hover-decoration: underline !default;\n$link-transition: color duration() easing(linear) !default;\n\n// List\n$list-indent: to-em(40px) !default;\n$list-vertical-spacing: to-em(6px) !default;\n$list-marker-color: $color-foreground !default;\n$list-unordered-offset-top: to-em(4px) !default;\n$list-unordered-offset-left: to-em(-7px) !default;\n$list-ordered-offset-left: to-em(-5px) !default;\n\n// Input\n$input-selector: '.form-control' !default;\n$input-height: to-em(38px) !default;\n$input-padding-vertical: to-em(6px) !default;\n$input-padding-horizontal: to-em(12px) !default;\n$input-border-width: 1px !default;\n$input-border-radius: to-em(2px) !default;\n$input-bg: $color-background !default;\n$input-color: $color-foreground !default;\n$input-border-color: $color-line !default;\n$input-box-shadow: none !default;\n$input-focus-border-color: $color-accent !default;\n$input-focus-box-shadow: 0 0 0 to-em(3px) rgba($color-accent, 0.25) !default;\n$input-disabled-bg: $color-background-muted !default;\n$input-disabled-color: $color-foreground-muted !default;\n$input-disabled-border-color: $color-line !default;\n$input-transition: border-color duration() easing(), box-shadow duration() easing() !default;\n\n// Select\n$select-icon-color: $color-foreground !default;\n\n// Checkbox & Radio\n$selection-icon-color: $color-foreground-inverted !default;\n$selection-offset-top: to-em(4px) !default;\n$selection-border-width: $input-border-width !default;\n$selection-border-color: $input-border-color !default;\n$selection-bg: $input-bg !default;\n$selection-box-shadow: $input-box-shadow !default;\n$selection-focus-border-color: $input-focus-border-color !default;\n$selection-focus-box-shadow: $input-focus-box-shadow !default;\n$selection-active-filter: brightness(90%) !default;\n$selection-checked-bg: $color-accent !default;\n$selection-checked-border-color: $selection-checked-bg !default;\n$selection-disabled-bg: $input-disabled-bg !default;\n$selection-disabled-color: $input-disabled-color !default;\n$selection-disabled-border-color: $input-disabled-border-color !default;\n$selection-transition: opacity duration() easing(linear), transform duration() easing() !default;\n$checkbox-border-radius: $input-border-radius !default;\n\n// Placeholder\n$placeholder-color: $color-foreground-muted !default;\n\n// Label\n$label-spacing: to-rem(8px) !default;\n\n// Button Base\n$button-selector: '.button' !default;\n$button-cursor-pointer: true !default;\n$button-padding-vertical: to-em(6px) !default;\n$button-padding-horizontal: to-em(16px) !default;\n$button-border-width: 1px !default;\n$button-border-radius: to-em(2px) !default;\n$button-transition: background-color duration() easing(), color duration() easing(),\n  border-color duration() easing(), box-shadow duration() easing() !default;\n\n// Button Variations\n$button-variations: (\n  base: (\n    background-color: $color-accent,\n    color: $color-foreground-inverted,\n    selectors: (\n      '&:hover': (\n        background-color: shade-color($color-accent, 15%),\n        color: $color-foreground-inverted,\n      ),\n      '&:focus': (\n        background-color: shade-color($color-accent, 20%),\n        color: $color-foreground-inverted,\n        box-shadow: 0 0 0 to-em(3px) rgba($color-accent, 0.35),\n      ),\n      '&:disabled, &.disabled': (\n        opacity: 0.65,\n      ),\n    ),\n  ),\n) !default;\n\n// Selector for formatted text / CMS output\n$formatted-text-selector: '.formatted-text' !default;\n\n// Icons\n$icons: (\n  radio:\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\"><path fill=\"#{$color-icon}\" d=\"M4 1C2.3 1 1 2.3 1 4s1.3 3 3 3 3-1.3 3-3S5.7 1 4 1z\"/></svg>',\n  checkbox:\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\"><path fill=\"#{$color-icon}\" d=\"M6.4 1L5.7 1.7 2.9 4.5 2.1 3.7 1.4 3 0 4.4l0.7 0.7 1.5 1.5 0.7 0.7 0.7-0.7 3.5-3.5 0.7-0.7L6.4 1 6.4 1z\"/></svg>',\n  select:\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\"><path fill=\"#{$color-icon}\" d=\"m1.41 0 4.59 4.58 4.59-4.58 1.41 1.41l-6 6-6-6z\"/></svg>',\n  bullet:\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"2\" viewBox=\"0 0 11 2\"><path fill=\"none\" stroke=\"#{$color-icon}\" stroke-width=\"2\" d=\"M1.5,1.5h8\"/></svg>',\n) !default;\n","/// Output CSS properties and resolve selectors key or sizing map\n///\n/// @param {String} $key\n/// @param {String|Number|Color|Map} $value\n@mixin output-props($key, $value) {\n  @if ($key == 'selectors') {\n    @each $selector-key, $selector-value in $value {\n      #{$selector-key} {\n        @each $deep-key, $deep-value in $selector-value {\n          #{$deep-key}: $deep-value;\n        }\n      }\n    }\n  } @else if (is-sizing-map($value)) {\n    @include fluid-calc($key, $value);\n  } @else {\n    #{$key}: $value;\n  }\n}\n","/// Generate output for a config variation (e.g button or type)\n///\n/// @param {Map} $variation-map\n/// @param {String} $variation\n@mixin use-variation($variation-map, $variation) {\n  $config: map-get($variation-map, $variation);\n\n  @if not $config {\n    @error \"The key `#{$variation}` wasn't found in map $variation-map.\";\n  }\n\n  @include loop-variation($config);\n}\n","/// Generate min, max and fluid in-between values for a given CSS property\n///\n/// @param {String} $prop - Any CSS property that supports calc as a value\n/// @param {Map|Number|List} $sizes - Map of two sizes formatted as `(min: x, max y)`, list of two sizes formatted as `(x, y)` or just a number (min size)\n/// @param {Map} $breakpoints [$fluid-breakpoints] - Map of two named breakpoints from `$mq-breakpoints` formatted as `(min: md, max: lg)` or custom px values formatted as `(min: 600px, max: 900px)`\n/// @param {Bool} $negative [false] - Negates the values if true\n/// @param {Bool} $important [false] - Adds important flag if true\n/// @param {String} $current-breakpoint [null]\n/// @param {List} $all-breakpoints [null]\n@mixin fluid-calc(\n  $prop,\n  $sizes,\n  $breakpoints: $fluid-breakpoints,\n  $negative: false,\n  $important: false,\n  $current-breakpoint: null,\n  $all-breakpoints: null\n) {\n  $min-size: null;\n  $max-size: null;\n  $min-breakpoint: map-get($breakpoints, 'min');\n  $max-breakpoint: map-get($breakpoints, 'max');\n  $min-breakpoint-value: $min-breakpoint;\n  $max-breakpoint-value: $max-breakpoint;\n  $multiplicand: 1;\n\n  @if (type-of($sizes) == 'map') {\n    $min-size: map-get($sizes, 'min');\n    $max-size: map-get($sizes, 'max');\n  } @else if (type-of($sizes) == 'list') {\n    $min-size: nth($sizes, 1);\n    $max-size: nth($sizes, 2);\n  } @else if (type-of($sizes) == 'number') {\n    $min-size: $sizes;\n  }\n\n  @if map-has-key($mq-breakpoints, $min-breakpoint) {\n    $min-breakpoint-value: map-get($mq-breakpoints, $min-breakpoint);\n  }\n\n  @if map-has-key($mq-breakpoints, $max-breakpoint) {\n    $max-breakpoint-value: map-get($mq-breakpoints, $max-breakpoint);\n  }\n\n  @if $negative == true {\n    $multiplicand: -1;\n  }\n\n  @if $important == true {\n    $important: unquote('!important');\n  } @else {\n    $important: null;\n  }\n\n  @if $min-size {\n    $min-size: to-rem($min-size);\n\n    @if (\n      not\n        $current-breakpoint or\n        ($current-breakpoint == nth($all-breakpoints, 1)) or\n        ($current-breakpoint == nth($all-breakpoints, length($all-breakpoints))) and not\n        $max-size\n    ) {\n      #{$prop}: $min-size * $multiplicand $important;\n    }\n\n    @if ($max-size and $max-breakpoint-value) {\n      $max-size: to-rem($max-size);\n\n      @if ($fluid-scaling and $min-breakpoint-value) {\n        $value: calc(\n            (\n                #{$min-size} +\n                  #{strip-unit($max-size - $min-size)} *\n                  (100vw - #{to-rem($min-breakpoint-value)}) /\n                  #{strip-unit(to-rem($max-breakpoint-value) - to-rem($min-breakpoint-value))}\n              ) *\n              #{$multiplicand}\n          )\n          $important;\n\n        @if $current-breakpoint {\n          // Breakpoint set already in parent mixin (loop-variation)\n          #{$prop}: $value;\n        } @else {\n          @include mq($min-breakpoint-value) {\n            #{$prop}: $value;\n          }\n        }\n      }\n\n      @if (\n        not\n          $current-breakpoint or\n          ($current-breakpoint == nth($all-breakpoints, length($all-breakpoints)))\n      ) {\n        @include mq($max-breakpoint-value) {\n          #{$prop}: $max-size * $multiplicand $important;\n        }\n      }\n    }\n  }\n}\n","address,\nblockquote,\ntable,\nfigure,\nform,\nfieldset,\nlegend,\npre,\ndl,\nul,\nol,\nhr,\np {\n  @include spacing('margin-bottom');\n\n  margin-top: 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n","#{$headings} {\n  @include type('headings');\n\n  margin-top: $headings-spacing * 2;\n  margin-bottom: $headings-spacing;\n  color: $headings-color;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n@include scale-headings;\n","/// Scale headings using modular scale\n///\n/// @param {Number} $scale [$type-scale-base]\n/// @param {List} $headings [$headings]\n@mixin scale-headings($scale: $type-scale-base, $headings: $headings) {\n  $max-scale: 0;\n\n  @each $heading in $headings {\n    #{$heading} {\n      @if (type-of($scale) == 'map') {\n        $sizes: $scale;\n\n        // Replace map values with modular scaled values\n        @each $key, $value in $scale {\n          $sizes: map-remove($sizes, $key);\n          $sizes: map-merge(\n            $sizes,\n            (\n              $key: modular-scale($max-scale, $value),\n            )\n          );\n        }\n\n        @include fluid-calc('font-size', $sizes);\n      } @else {\n        font-size: modular-scale($max-scale, $scale);\n      }\n    }\n\n    $max-scale: $max-scale + 1;\n  }\n}\n\n/// Wrapper mixin for use-variation that uses the `$token-type` map as default lookup map\n///\n/// @param {String} $variation ['default'] - Map key of `$token-type`\n@mixin type($variation: 'default') {\n  @include use-variation($token-type, $variation);\n}\n","a {\n  color: $link-color;\n\n  &:hover {\n    color: $link-hover-color;\n  }\n\n  &:active {\n    color: $link-active-color;\n  }\n\n  &:focus {\n    color: $link-focus-color;\n  }\n}\n\na:not([class]) {\n  text-decoration: $link-decoration;\n  transition: $link-transition;\n\n  &:hover {\n    text-decoration: $link-hover-decoration;\n  }\n}\n","ul,\nol {\n  @include list-unstyled;\n}\n","/// Remove default styles from lists (ul, ol)\n@mixin list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n","label {\n  display: inline-block;\n  margin-bottom: $label-spacing;\n}\n","@supports (appearance: none) {\n  select:not([multiple]) {\n    appearance: none;\n    padding-right: 2em;\n    background-repeat: no-repeat;\n    background-position: right $input-padding-horizontal center;\n    background-image: url(get-icon('select', $select-icon-color));\n  }\n}\n\nselect {\n  &[multiple],\n  &[size] {\n    height: auto;\n  }\n}\n\ntextarea {\n  &[rows] {\n    height: auto;\n  }\n\n  &:not([rows]) {\n    height: $input-height * 2;\n  }\n}\n\ninput[type='color'] {\n  max-width: 2.75rem;\n  padding: $input-padding-vertical;\n}\n\n// Fix date input height in Safari\ninput[type='date'] {\n  display: flex;\n}\n\n// Fix appearance for date inputs in Safari\ninput[type='date'],\ninput[type='month'] {\n  -webkit-appearance: none;\n}\n\ninput[type='file'] {\n  display: block;\n  max-width: 100%;\n}\n\n// Remove inner padding from color pickers\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n::placeholder {\n  color: $placeholder-color;\n}\n","[type='radio'],\n[type='checkbox'] {\n  &:not(:only-child) {\n    position: absolute;\n    margin-top: 0.35em;\n  }\n\n  ~ label {\n    margin-bottom: 0;\n    padding-left: 20px;\n    font-weight: inherit;\n  }\n\n  &:disabled ~ label {\n    color: $selection-disabled-color;\n    cursor: not-allowed;\n  }\n}\n","@if $button-cursor-pointer {\n  [role='button'],\n  [type='button'],\n  [type='reset'],\n  [type='submit'],\n  button {\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n}\n\n::file-selector-button {\n  font: inherit;\n\n  @if $button-cursor-pointer {\n    input:not(:disabled) & {\n      cursor: pointer;\n    }\n  }\n}\n","table {\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  vertical-align: top;\n}\n\nth {\n  text-align: left;\n}\n","// Print styles adapted from HTML5 Boilerplate: https://github.com/h5bp/html5-boilerplate\n\n@media print {\n  *,\n  *::before,\n  *::after {\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important;\n  }\n\n  a,\n  a:visited {\n    text-decoration: underline;\n  }\n\n  a[href]::after {\n    content: ' (' attr(href) ')';\n  }\n\n  abbr[title]::after {\n    content: ' (' attr(title) ')';\n  }\n\n  a[href^='#']::after,\n  a[href^='javascript:']::after {\n    content: '';\n  }\n\n  pre {\n    white-space: pre-wrap !important;\n  }\n\n  pre,\n  blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid;\n  }\n\n  thead {\n    display: table-header-group;\n  }\n\n  tr,\n  img {\n    page-break-inside: avoid;\n  }\n\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3;\n  }\n\n  h2,\n  h3 {\n    page-break-after: avoid;\n  }\n}\n","/// Output a centered container with gutters\n///\n/// @param {Number|Map} $gutter [$grid-container-gutter] - The amount of gutter as number, breakpoint map `(xs: 30px, md: 60px)` or sizing map (min: 30px, max: 60px)\n/// @param {Number} $width [$grid-container] - Maximum width of the container\n@mixin container($gutter: $grid-container-gutter, $width: $grid-container) {\n  $largest-gutter: to-rem(get-largest-sizing($gutter));\n\n  @if (type-of($width) == 'number') {\n    @if (unit($width) == '%') {\n      @if $largest-gutter > 0 {\n        $width: calc(#{$width} - #{$largest-gutter});\n      }\n    } @else {\n      $width: to-rem($width) - $largest-gutter;\n    }\n  }\n\n  @include make-gutters($gutter, 'padding');\n\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: $width;\n}\n","/// Output a flex grid row with gutters\n///\n/// @param {Number|Map} $gutter [$grid-gutter] - The amount of gutter as number, breakpoint map `(xs: 30px, md: 60px)` or sizing map (min: 30px, max: 60px)\n@mixin row($gutter: $grid-gutter) {\n  @include make-gutters($gutter, 'margin');\n\n  display: flex;\n  flex-wrap: wrap;\n}\n","@use 'sass:math';\n\n/// Output flex column base styles with gutter\n///\n/// @param {Number|Map} $gutter [$grid-gutter] - The amount of gutter as number, breakpoint map `(xs: 30px, md: 60px)` or sizing map (min: 30px, max: 60px)\n/// @param {Number} $size [100%] - Width of the column as number\n/// @param {Number} $columns [$grid-columns] - Number of grid columns\n@mixin column-base($gutter: $grid-gutter, $size: 100%, $columns: $grid-columns) {\n  @include make-gutters($gutter, 'padding');\n  @include column($size, $columns);\n\n  position: relative;\n}\n\n/// Output flex column width modifier styles\n///\n/// @param {Number|String} $size ['expand'] - Column size as number (e.g. 20% or 0.2) or string ('expand' or 'shrink')\n/// @param {Number} $columns [$grid-columns] - Number of grid columns\n@mixin column($size: 'expand', $columns: $grid-columns) {\n  @if $size {\n    @if (type-of($size) == 'number') {\n      @if (unit($size) == '%') {\n        width: $size;\n      } @else {\n        @if $size < 1 {\n          width: percentage($size);\n        } @else {\n          width: percentage(math.div($size, $columns));\n        }\n      }\n    } @else {\n      width: auto;\n      max-width: 100%;\n\n      @if $size == 'shrink' {\n        flex: 0 0 auto;\n      }\n\n      @if $size == 'expand' {\n        flex: 1 1 auto;\n      }\n    }\n  }\n}\n\n/// Output flex column push styles\n///\n/// @param {Number} $size - Column size as number of columns\n/// @param {Number} $columns [$grid-columns] - Number of grid columns\n@mixin column-push($size, $columns: $grid-columns) {\n  @if $size > 0 {\n    left: percentage(divide($size, $columns));\n  } @else {\n    left: auto;\n  }\n}\n\n/// Output flex column pull styles\n///\n/// @param {Number} $size - Column size as number of columns\n/// @param {Number} $columns [$grid-columns] - Number of grid columns\n@mixin column-pull($size, $columns: $grid-columns) {\n  @if $size > 0 {\n    right: percentage(divide($size, $columns));\n  } @else {\n    right: auto;\n  }\n}\n\n/// Output flex column offset styles\n///\n/// @param {Number} $size - Column size as number of columns\n/// @param {Number} $columns [$grid-columns] - Number of grid columns\n@mixin column-offset($size, $columns: $grid-columns) {\n  @if $size < $columns {\n    margin-left: percentage(divide($size, $columns));\n  }\n}\n\n// Generate columns for a specific breakpoint\n///\n/// @param {String} $breakpoint - Breakpoint name\n/// @param {Boolean} $pull [$grid-pull-class] - Outputs column pull class if true\n/// @param {Boolean} $push [$grid-push-class] - Outputs column push class if true\n/// @param {Boolean} $offset [$grid-offset-class] - Outputs column offset class if true\n@mixin loop-columns(\n  $breakpoint,\n  $pull: $grid-pull-classes,\n  $push: $grid-push-classes,\n  $offset: $grid-offset-classes,\n  $column: $grid-column-classes\n) {\n  @for $i from 0 through $grid-columns {\n    @if $column {\n      @if $i > 0 {\n        .col-#{$breakpoint}-#{$i} {\n          @include column($i, $grid-columns);\n        }\n      }\n    }\n\n    @if $pull {\n      .col-#{$breakpoint}-pull-#{$i} {\n        @include column-pull($i, $grid-columns);\n      }\n    }\n\n    @if $push {\n      .col-#{$breakpoint}-push-#{$i} {\n        @include column-push($i, $grid-columns);\n      }\n    }\n\n    @if $offset {\n      .col-#{$breakpoint}-offset-#{$i} {\n        @include column-offset($i, $grid-columns);\n      }\n    }\n  }\n}\n",".embed-responsive {\n  @if (type-of($ratios) == 'map') {\n    $first-key: nth(map-keys($ratios), 1);\n    $ratios: map-remove($ratios, $first-key);\n\n    @include aspect-ratio($first-key);\n\n    @each $name, $ratio in $ratios {\n      &--#{$name} {\n        &::before {\n          padding-bottom: ratio-to-percentage($ratio);\n        }\n      }\n    }\n  }\n\n  position: relative;\n  overflow: hidden;\n\n  iframe,\n  embed,\n  object,\n  video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n","/// Create an aspect ratio box with optional support for dynamic growing content\n///\n/// @param {String|List} $ratio - Map key of the `$ratios` map or a list formatted as `x by y`\n/// @param {Bool} $grow [false] - Enables dynamic growing of the container if true\n@mixin aspect-ratio($ratio, $grow: false) {\n  @if (type-of($ratio) == 'string' or type-of($ratio) == 'list') {\n    $key: map-get($ratios, $ratio);\n\n    @if $key {\n      $ratio: ratio-to-percentage($key);\n    } @else {\n      $ratio: ratio-to-percentage($ratio);\n    }\n  } @else {\n    $ratio: percentage($ratio);\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    padding-bottom: $ratio;\n  }\n\n  @if $grow {\n    @include clearfix;\n\n    &::before {\n      float: left;\n    }\n  }\n}\n",".list,\n#{$formatted-text-selector} ul,\n#{$formatted-text-selector} ol {\n  li {\n    position: relative;\n    margin-left: $list-indent;\n\n    &::before {\n      content: '';\n      position: absolute;\n      transform: translateX(-100%);\n    }\n  }\n\n  ol,\n  ul,\n  li + li {\n    margin-top: $list-vertical-spacing;\n  }\n}\n\n.list--unordered,\n#{$formatted-text-selector} ul {\n  li::before {\n    top: $list-unordered-offset-top;\n    left: $list-unordered-offset-left;\n    height: 1em;\n    width: 1em;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: contain;\n    background-image: url(get-icon(bullet, $list-marker-color));\n  }\n}\n\n.list--ordered,\n#{$formatted-text-selector} ol {\n  counter-reset: ordered-list;\n\n  li::before {\n    content: counters(ordered-list, '.') '. ';\n    counter-increment: ordered-list;\n    left: $list-ordered-offset-left;\n    color: $list-marker-color;\n  }\n}\n","#{$input-selector} {\n  display: block;\n  width: 100%;\n  height: $input-height;\n  padding: $input-padding-vertical $input-padding-horizontal;\n  border: $input-border-width solid $input-border-color;\n  border-radius: $input-border-radius;\n  box-shadow: $input-box-shadow;\n  background-clip: padding-box; // remove shadow in iOS\n  background-color: $input-bg;\n  color: $input-color;\n  color-adjust: exact; // Keep custom styles for print\n  transition: $input-transition;\n\n  &:focus {\n    border-color: $input-focus-border-color;\n    box-shadow: $input-focus-box-shadow;\n    outline: 0;\n  }\n\n  &:disabled {\n    border-color: $input-disabled-border-color;\n    background-color: $input-disabled-bg;\n    color: $input-disabled-color;\n    cursor: not-allowed;\n  }\n}\n",".radio [type='radio'],\n.checkbox [type='checkbox'] {\n  &:not(:only-child) {\n    opacity: 0;\n  }\n\n  ~ label {\n    position: relative;\n    padding-left: 1.4em;\n    line-height: 1.5;\n  }\n\n  ~ label::before,\n  ~ label::after {\n    content: '';\n    position: absolute;\n    top: $selection-offset-top;\n    left: 0;\n    width: 1em;\n    height: 1em;\n    color-adjust: exact; // Keep custom styles for print\n  }\n\n  ~ label::before {\n    border: $selection-border-width solid $selection-border-color;\n    background-color: $selection-bg;\n    box-shadow: $selection-box-shadow;\n  }\n\n  ~ label::after {\n    background-repeat: no-repeat;\n    background-position: center center;\n    opacity: 0;\n    transform: scale(0);\n    transition: $selection-transition;\n  }\n\n  &:disabled ~ label::before {\n    background-color: $selection-disabled-bg;\n    border-color: $selection-disabled-border-color;\n  }\n\n  &:focus ~ label::before {\n    border-color: $selection-focus-border-color;\n    box-shadow: $selection-focus-box-shadow;\n  }\n\n  &:checked ~ label::before {\n    border-color: $selection-checked-border-color;\n    background-color: $selection-checked-bg;\n  }\n\n  &:checked ~ label::after {\n    opacity: 1;\n    transform: none;\n  }\n\n  &:active:not(:disabled) ~ label::before {\n    filter: $selection-active-filter;\n  }\n}\n\n.radio [type='radio'] {\n  ~ label::before {\n    border-radius: 50%;\n  }\n\n  &:checked ~ label::after {\n    background-image: url(get-icon('radio', $selection-icon-color));\n  }\n}\n\n.checkbox [type='checkbox'] {\n  ~ label::before {\n    border-radius: $checkbox-border-radius;\n  }\n\n  &:checked ~ label::after {\n    background-image: url(get-icon('checkbox', $selection-icon-color));\n  }\n}\n","/// Remove browser default styles from `<button>`\n@mixin button-unstyled {\n  border: 0;\n  padding: 0;\n  background-color: transparent;\n  color: inherit;\n}\n\n// Generate styles for a `<button>` that looks like a link\n@mixin button-link {\n  @include button-unstyled;\n\n  color: $link-color;\n  text-decoration: $link-decoration;\n  font-weight: $font-weight-base;\n  user-select: text;\n\n  &:hover,\n  &:focus {\n    color: $link-hover-color;\n    text-decoration: $link-hover-decoration;\n  }\n}\n\n// Generate styles for a disabled `<button>`\n@mixin button-disabled {\n  &:disabled,\n  &.disabled {\n    cursor: not-allowed;\n    pointer-events: none;\n  }\n}\n\n/// Generate button base styles\n///\n/// @param {Number} $padding-vertical [$button-padding-vertical]\n/// @param {Number} $padding-horizontal [$button-padding-horizontal]\n/// @param {Number} $border-width [$button-border-width]\n/// @param {Number} $border-radius [$button-border-radius]\n/// @param {List} $transition [$button-transition]\n@mixin button-base(\n  $padding-vertical: $button-padding-vertical,\n  $padding-horizontal: $button-padding-horizontal,\n  $border-width: $button-border-width,\n  $border-radius: $button-border-radius,\n  $transition: $button-transition\n) {\n  @include button-disabled;\n\n  display: inline-block;\n  vertical-align: middle;\n  padding: $padding-vertical $padding-horizontal;\n  border: $border-width solid transparent;\n  border-radius: $border-radius;\n  transition: $transition;\n  text-align: center;\n  text-decoration: none;\n  white-space: normal;\n  user-select: none;\n  touch-action: manipulation;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n    text-decoration: none;\n  }\n}\n\n/// Generate styles for a single button variation\n///\n/// @param {String} $variation ['base'] - Map key of `$button-variations`\n@mixin button($variation: 'base') {\n  @include button-base;\n  @include use-variation($button-variations, $variation);\n}\n\n/// Generate button variation styles\n///\n/// @param {Map} $variations [$button-variations] - Map of button variations\n@mixin button-variations($variations: $button-variations) {\n  @if (type-of($variations) == 'map') {\n    $first-key: nth(map-keys($variations), 1);\n    $variations: map-remove($variations, $first-key);\n\n    #{$button-selector} {\n      @include use-variation($button-variations, $first-key);\n\n      @each $key, $value in $variations {\n        &--#{$key} {\n          @include use-variation($button-variations, $key);\n        }\n      }\n    }\n  }\n}\n",".invisible {\n  visibility: hidden !important;\n}\n\n.hidden {\n  display: none !important;\n}\n\n@media print {\n  .hidden-print {\n    display: none !important;\n  }\n}\n\n@include loop-breakpoints($mq: false) {\n  .visible-#{$breakpoint} {\n    display: none !important;\n  }\n\n  @if (not(is-first-breakpoint($breakpoint) or is-last-breakpoint($breakpoint))) {\n    .visible-#{$breakpoint}-up {\n      display: none !important;\n    }\n  }\n}\n\n@include loop-breakpoints($inclusive: false) {\n  .hidden-#{$breakpoint} {\n    display: none !important;\n  }\n\n  .visible-#{$breakpoint} {\n    display: block !important;\n  }\n}\n\n@include loop-breakpoints {\n  @if (not(is-first-breakpoint($breakpoint) or is-last-breakpoint($breakpoint))) {\n    .hidden-#{$breakpoint}-up {\n      display: none !important;\n    }\n\n    .visible-#{$breakpoint}-up {\n      display: block !important;\n    }\n  }\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n// See https://github.com/sass-mq/sass-mq/pull/10\n\n@use 'sass:math';\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n  @if ($mq-base-font-size != 16px) {\n    @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n  }\n  @if ($base-font-size != 16px) {\n    @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n  }\n  @if unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return mq-px2em($px * 1px, $base-font-size);\n  } @else if unit($px) == em {\n    @return $px;\n  }\n  @return math.div($px, $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n  @if map-has-key($breakpoints, $name) {\n    @return map-get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint `#{$name}` wasn't found in $breakpoints.\";\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $mq-media-type,\n  $breakpoints: $mq-breakpoints,\n  $responsive: $mq-responsive,\n  $static-breakpoint: $mq-static-breakpoint\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: mq-px2em($from);\n    } @else {\n      $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: mq-px2em($until);\n    } @else {\n      $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  // Responsive support is disabled, rasterize the output outside @media blocks\n  // The browser will rely on the cascade itself.\n  @if $responsive == false {\n    $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n    $target-width: mq-px2em($static-breakpoint-width);\n\n    // Output only rules that start at or span our target width\n    @if (\n      $and ==\n        false and\n        $min-width <=\n        $target-width and\n        ($until == false or $max-width >= $target-width) and\n        $media-type !=\n        'print'\n    ) {\n      @content;\n    }\n  }\n\n  // Responsive support is enabled, output rules inside @media queries\n  @else {\n    @if $min-width != 0 {\n      $media-query: '#{$media-query} and (min-width: #{$min-width})';\n    }\n    @if $max-width != 0 {\n      $media-query: '#{$media-query} and (max-width: #{$max-width})';\n    }\n    @if $and {\n      $media-query: '#{$media-query} and #{$and}';\n    }\n\n    // Remove unnecessary media query prefix 'all and '\n    @if ($media-type == 'all' and $media-query != '') {\n      $media-type: '';\n      $media-query: str-slice(unquote($media-query), 6);\n    }\n\n    @media #{$media-type + $media-query} {\n      @content;\n    }\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: nth($list, ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: append($less, $item);\n      } @else if ($item > $seed) {\n        $large: append($large, $item);\n      }\n    }\n\n    @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map-keys($map);\n  $map-values: map-values($map);\n  $map-values-sorted: _mq-quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: nth($map-keys, $index);\n    $map-sorted: map-merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n  $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n  body::before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})';\n      }\n    }\n  }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n  @include mq-show-breakpoints;\n}\n",".sr-only {\n  @include sr-only;\n}\n\n.sr-only-focusable {\n  @include sr-only-focusable;\n}\n","/// Hide content accessibly\n@mixin sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n}\n\n/// Undo styles from sr-only\n@mixin sr-only-reset {\n  position: static;\n  width: auto;\n  height: auto;\n  overflow: visible;\n  clip: auto;\n  white-space: inherit;\n}\n\n/// Undo styles from sr-only when element is activated or focused\n@mixin sr-only-focusable {\n  &:active,\n  &:focus {\n    @include sr-only-reset;\n  }\n}\n","#{$formatted-text-selector} {\n  @include spacing('margin-bottom');\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  // Hide <br> tags starting from three consecutive uses\n  br:nth-of-type(n + 3),\n  br:nth-of-type(n + 3) ~ br {\n    display: none;\n  }\n\n  p:empty {\n    display: none;\n  }\n}\n"],"names":[],"sourceRoot":""}